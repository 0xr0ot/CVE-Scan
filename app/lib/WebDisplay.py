#!/usr/bin/env python3.3
# -*- coding: utf8 -*-
#
# Web component of CVE-Scan. Takes a list of scanned hosts as input and
# starts a web server to display this information in a graphical manner,
# enhancing it with information from the CVE-Search database and 
# ToolsWatch Default Password Enumeration (DPE) list.
#
# Copyright (c) 2015	Pieter-Jan Moreels

# Imports

import os
import sys
runpath=os.path.dirname(os.path.realpath(__file__))
#cve-search cves
from flask import Flask
from flask import render_template
from flask.ext.pymongo import PyMongo
import pymongo

from Config import Configuration

class WebDisplay():
  @classmethod
  def start(self,port=None,systems=None):
    self.systems=systems
    app = Flask(__name__, static_folder='static', static_url_path='/static')
    app.config['MONGO_DBNAME'] = Configuration.getMongoDB()
    # functions
    def getEnhance():
      for system in self.systems:
        cpe=system['cpe']
        if cpe:
          system['cves']=list(db.find({'vulnerable_configuration': system['cpe']}))
          #get possible dpe info and store in dpe
        for service in system['services']:
          service['cves']=list(db.find({'vulnerable_configuration':service['cpe']}))
          #get dpe info for service
      return systems

    #routes
    @app.route('/')
    def index():
      systems=getEnhance()
      return render_template('index.html', systems=systems)

    @app.route('/cve/<cveid>')
    def cve(cveid):
      cvesp = cves.last(rankinglookup = True, namelookup = True, vfeedlookup = True)
      cve = cvesp.getcve(cveid=cveid)
      if cve is None:
        return page_not_found(404)
      cve = markCPEs(cve)
      return render_template('cve.html', cve=cve)

    #start webserver
    app.run(host='127.0.0.1', port=5000, debug=True)


